{"version":3,"sources":["../src/Keyboard.js"],"names":["Keyboard","props","handleLetterButtonClick","bind","handleBackspaceClick","handleLanguageClick","clearInput","handleShiftClick","handleSymbolsClick","state","currentLanguage","defaultKeyboard","showSymbols","uppercase","isUppercase","inputNode","value","onClick","setTimeout","focus","dispatchEvent","Event","setState","key","selectionStart","selectionEnd","e","length","nextValue","substring","setSelectionRange","isFirstLetterUppercase","type","dataset","nextSelectionPosition","keysSet","map","keyRow","toUpperCase","symbolsKeyValue","rightButtons","keys","getKeys","numbers","getSymbolsKeyValue","button","hideKeyboard","propTypes","any","isRequired","func","bool","string","secondaryKeyboard","defaultProps"],"mappings":"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","file":"Keyboard.js","sourcesContent":["import React, {PureComponent, PropTypes} from 'react';\r\nimport KeyboardButton from './KeyboardButton';\r\n\r\nimport LatinLayout from './layouts/LatinLayout';\r\nimport CyrillicLayout from './layouts/CyrillicLayout';\r\nimport SymbolsLayout from './layouts/SymbolsLayout';\r\nimport LatinExtended from './layouts/LatinExtended';\r\nimport GermanLayout from './layouts/GermanLayout';\r\n\r\nimport BackspaceIcon from './icons/BackspaceIcon';\r\nimport LanguageIcon from './icons/LanguageIcon';\r\nimport ShiftIcon from './icons/ShiftIcon';\r\n\r\n\r\nexport default class Keyboard extends PureComponent {\r\n\tstatic propTypes = {\r\n\t\tinputNode: PropTypes.any.isRequired,\r\n\t\tonClick: PropTypes.func,\r\n\t\tisFirstLetterUppercase: PropTypes.bool,\r\n\t\tdefaultKeyboard: PropTypes.string,\r\n\t\tsecondaryKeyboard: PropTypes.string,\r\n\t\thideKeyboard: PropTypes.func,\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\trightButtons: [],\r\n\t\tisFirstLetterUppercase: false,\r\n\t\tdefaultKeyboard: 'cs',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleLetterButtonClick = this.handleLetterButtonClick.bind(this);\r\n\t\tthis.handleBackspaceClick = this.handleBackspaceClick.bind(this);\r\n\t\tthis.handleLanguageClick = this.handleLanguageClick.bind(this);\r\n\t\tthis.clearInput = this.clearInput.bind(this);\r\n\t\tthis.handleShiftClick = this.handleShiftClick.bind(this);\r\n\t\tthis.handleSymbolsClick = this.handleSymbolsClick.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrentLanguage: props.defaultKeyboard,\r\n\t\t\tshowSymbols: false,\r\n\t\t\tuppercase: this.isUppercase(),\r\n\t\t};\r\n\t}\r\n\r\n\tclearInput() {\r\n\t\tconst {inputNode} = this.props;\r\n\r\n\t\tinputNode.value = '';\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick('');\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t}, 0);\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\thandleShiftClick() {\r\n\t\tthis.setState({uppercase: !this.state.uppercase});\r\n\t}\r\n\r\n\thandleSymbolsClick() {\r\n\t\tthis.setState({showSymbols: !this.state.showSymbols});\r\n\t}\r\n\r\n\thandleLetterButtonClick(key) {\r\n\t\tconst {inputNode} = this.props;\r\n\t\tconst {value} = inputNode;\r\n\t\tlet selectionStart;\r\n\t\tlet selectionEnd;\r\n\t\ttry {\r\n\t\t\tselectionStart = inputNode.selectionStart;\r\n\t\t\tselectionEnd = inputNode.selectionEnd;\r\n\t\t} catch (e) {\r\n\t\t\tselectionStart = value.length;\r\n\t\t\tselectionEnd = value.length;\r\n\t\t}\r\n\t\tconst nextValue = value.substring(0, selectionStart) + key + value.substring(selectionEnd);\r\n\r\n\t\tinputNode.value = nextValue;\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick(nextValue);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t\ttry {\r\n\t\t\t\tinputNode.setSelectionRange(selectionStart + 1, selectionStart + 1);\r\n\t\t\t} catch (e) {}\r\n\t\t}, 0);\r\n\t\tthis.setState({uppercase: this.isUppercase()});\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tisUppercase() {\r\n\t\tconst {inputNode, isFirstLetterUppercase} = this.props;\r\n\t\treturn inputNode.type !== 'password' &&\r\n\t\tinputNode.dataset.type !== 'email' &&\r\n\t\t!inputNode.value.length && isFirstLetterUppercase;\r\n\t}\r\n\r\n\thandleBackspaceClick() {\r\n\t\tconst {inputNode} = this.props;\r\n\t\tconst {value} = inputNode;\r\n\t\tlet selectionStart;\r\n\t\tlet selectionEnd;\r\n\t\ttry {\r\n\t\t\tselectionStart = inputNode.selectionStart;\r\n\t\t\tselectionEnd = inputNode.selectionEnd;\r\n\t\t} catch (e) {\r\n\t\t\tselectionStart = 0;\r\n\t\t\tselectionEnd = value.length;\r\n\t\t}\r\n\r\n\t\tlet nextValue;\r\n\t\tlet nextSelectionPosition;\r\n\t\tif (selectionStart === selectionEnd) {\r\n\t\t\tnextValue = value.substring(0, selectionStart - 1) + value.substring(selectionEnd);\r\n\t\t\tnextSelectionPosition = selectionStart - 1;\r\n\t\t} else {\r\n\t\t\tnextValue = value.substring(0, selectionStart) + value.substring(selectionEnd);\r\n\t\t\tnextSelectionPosition = selectionStart;\r\n\t\t}\r\n\t\tnextSelectionPosition = (nextSelectionPosition > 0) ? nextSelectionPosition : 0;\r\n\r\n\t\tinputNode.value = nextValue;\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick(nextValue);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t\ttry {\r\n\t\t\t\tinputNode.setSelectionRange(nextSelectionPosition, nextSelectionPosition);\r\n\t\t\t} catch (e) {}\r\n\t\t}, 0);\r\n\t\tthis.setState({uppercase: this.isUppercase()});\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tgetKeys() {\r\n\t\tlet keysSet;\r\n\t\tif (this.state.showSymbols) {\r\n\t\t\tkeysSet = LatinExtended;\r\n\t\t} else if(this.state.currentLanguage === 'cs') {\r\n\t\t\tkeysSet = LatinLayout;\r\n\t\t}\r\n\t\treturn this.state.uppercase ?\r\n\t\tkeysSet.map(keyRow => keyRow.map(key => key.toUpperCase()))\r\n\t\t: keysSet;\r\n\t}\r\n\r\n\tgetSymbolsKeyValue() {\r\n\t\tlet symbolsKeyValue;\r\n\t\tif (!this.state.showSymbols) {\r\n\t\t\tsymbolsKeyValue = 'Žšč';\r\n\t\t} else if (this.state.currentLanguage === 'cs') {\r\n\t\t\tsymbolsKeyValue = 'Abc';\r\n\t\t} else {\r\n\t\t\tsymbolsKeyValue = 'Abc';\r\n\t\t}\r\n\t\treturn symbolsKeyValue;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {rightButtons, inputNode} = this.props;\r\n\t\tconst keys = this.getKeys();\r\n\t\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n\t\tconst symbolsKeyValue = this.getSymbolsKeyValue();\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"keyboard keyboard-wrapper\">\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{numbers.map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tclasses={\"keyboard-numberButton\"}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={<BackspaceIcon />}\r\n\t\t\t\t\t\tonClick={this.handleBackspaceClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{keys[0].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{keys[1].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tclasses=\"shift-symbols\"\r\n\t\t\t\t\t\tvalue={<ShiftIcon />}\r\n\t\t\t\t\t\tonClick={this.handleShiftClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{keys[2].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tclasses=\"shift-symbols\"\r\n\t\t\t\t\t\tvalue={<ShiftIcon />}\r\n\t\t\t\t\t\tonClick={this.handleShiftClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tclasses=\"shift-symbols\"\r\n\t\t\t\t\t\tvalue={symbolsKeyValue}\r\n\t\t\t\t\t\tonClick={this.handleSymbolsClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={'@'}\r\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={' '}\r\n\t\t\t\t\t\tclasses=\"keyboard-space\"\r\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={'.'}\r\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={'↧'}\r\n\t\t\t\t\t\tclasses=\"keyboard-submit-button\"\r\n\t\t\t\t\t\tonClick={this.props.hideKeyboard}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]}